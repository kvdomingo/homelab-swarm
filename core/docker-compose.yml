networks:
  traefik:
    driver: overlay
    ipam:
      config:
        - subnet: 10.43.0.0/22
    attachable: true

volumes:
  nfs:
    driver_opts:
      type: nfs
      o: addr=10.10.10.100,rw,nfsvers=4
      device: ":/mnt/big-chonk/srv-lab"

services:
  traefik:
    image: traefik:v3.3
    environment:
      CF_API_EMAIL: ${CF_API_EMAIL}
      CF_API_KEY: ${CF_API_KEY}
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - type: volume
        source: nfs
        target: /acme.json
        volume:
          nocopy: true
          subpath: core_acme-data
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      - traefik
    labels:
      traefik.enable: 'true'
      traefik.http.routers.traefik.rule: Host(`traefik.dok.kvd.studio`)
      traefik.http.routers.traefik.entrypoints: https
      traefik.http.routers.traefik.tls: 'true'
      traefik.http.routers.traefik.tls.certresolver: cloudflare
      traefik.http.routers.traefik.tls.domains[0].main: dok.kvd.studio
      traefik.http.routers.traefik.tls.domains[0].sans: '*.dok.kvd.studio'
      traefik.http.routers.traefik.service: api@internal
      traefik.http.services.traefik.loadbalancer.server.port: '8080'

  portainer:
    image: portainer/portainer-ce:2.24.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - type: volume
        source: nfs
        target: /data
        volume:
          nocopy: true
          subpath: core_portainer-data
    networks:
      - traefik
    labels:
      traefik.enable: 'true'
      traefik.http.routers.portainer.rule: Host(`portainer.dok.kvd.studio`)
      traefik.http.routers.portainer.entrypoints: https
      traefik.http.routers.portainer.tls: 'true'
      traefik.http.routers.portainer.service: portainer
      traefik.http.services.portainer.loadbalancer.server.port: '9000'
